public class Solution {
    public void solve(char[][] board) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(board == null || board.length == 0) return;
        int n=board.length;
        int m=board[0].length;
        
        for(int i=0; i<m; i++)
        {
            if(board[0][i]=='O')
            {
                //board[n-1][i]='1';
                draw(board, 0, i);
            }
            
            if(board[n-1][i]=='O')
            {
                
                //board[n-1][i]='1';
                draw(board, n-1, i);
            }
        }
        
        for(int i=0; i<n; i++)
        {
            if(board[i][0]=='O')
            {
                //board[i][0]='1';
                draw(board, i, 0);
                
            }
            if(board[i][m-1]=='O')
            {
                //board[m-1][0]='1';
                draw(board, i, m-1);
                
            }
        }
        
        for(int i= 0; i<m;i++)
        {
            for(int j=0; j<n;j++)
            {
                if(board[j][i]=='O')
                    {board[j][i]='X';}
                if(board[j][i]=='1')
                {board[j][i]='O';}
            }
        }
        
    }
    public void draw(char[][] board, int i, int j)
    {
        int n=board.length;
        int m=board[0].length;
        board[i][j]='1';
        
        if(i>1 && board[i-1][j]=='O')
        {
            board[i-1][j]='1';
            draw(board, i-1, j);
        }
        if(i+1<n && board[i+1][j]=='O')
        {
            board[i+1][j]='1';
            draw(board, i+1, j);
        }
        if(j>1 && board[i][j-1]=='O')
        {
            board[i][j-1]='1';
            draw(board, i, j-1);
        }
        if(j+1<m && board[i][j+1]=='O')
        {
            board[i][j+1]='1';
            draw(board, i, j+1);
        }
        return;
    }
}