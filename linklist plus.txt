public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        // Start typing your Java solution below
        // DO NOT write main() function
        ListNode result=new ListNode(0);
        
        ListNode result1=result;
        
        while(l1!=null && l2!=null)
        {
            if(result.val+l1.val+l2.val>9)
            {
                result.val=result.val+l1.val+l2.val-10;
                result.next=new ListNode(1);
                result=result.next;
            }
            else if(l1.next==null && l2.next==null)//两数之和小于10，没有进位，且都是最后一位，不需要生产新的node
            {
                result.val=result.val+l1.val+l2.val;
            }else//某个比另一个长，还需要在生成新的节点
            {
                result.val=result.val+l1.val+l2.val;
                result.next=new ListNode(0);
                result=result.next;
            }
            l1=l1.next;
            l2=l2.next;
        }
        
       while(l1!=null)
       {
           if(result.val+l1.val>9)
           {
                result.val=result.val+l1.val-10;
                result.next=new ListNode(1);
                result=result.next;
           }
           else if(l1.next ==null){//最后一项了
               result.val=result.val+l1.val;
           }
           else{
               result.val=result.val+l1.val;
                result.next=new ListNode(0);
                result=result.next;
           }
           l1=l1.next;
       }
       
       while(l2!=null)
       {
           if(result.val+l2.val>9)
           {
                result.val=result.val+l2.val-10;
                result.next=new ListNode(1);
                result=result.next;
           } else if(l2.next==null)
           {
               result.val=result.val+l2.val;
           }
           else{
               result.val=result.val+l2.val;
                result.next=new ListNode(0);
                result=result.next;
           }
           l2=l2.next;
       }
       
       return result1;
        
    }
}