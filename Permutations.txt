public class Solution {
    public ArrayList<ArrayList<Integer>> permute(int[] num) {
        // Start typing your Java solution below
        // DO NOT write main() function
        ArrayList<ArrayList<Integer>> result=new ArrayList<ArrayList<Integer>>();
        ArrayList<Integer> temp=new ArrayList<Integer>();
        dfs(result,temp, 0, num);
        return result;
    }
    
    public void dfs(ArrayList<ArrayList<Integer>> result, ArrayList<Integer> temp, int pos, int[] num)
    {
        
        if(pos==num.length)
        {
            if(!result.contains(temp)){
            result.add(new ArrayList<Integer>(temp));}
    	return;

        }else
        
        for(int i =pos; i< num.length; i++)
        {
            //int s=pos;
            swap(num, pos, i);
            temp.add(num[pos]);
            dfs(result, temp, pos+1, num);
            temp.remove(temp.size()-1); 
            swap(num, pos, i);
        }
    }
    
    public void swap(int[] num, int i, int j)
    {
        int temp=num[i];
        num[i]=num[j];
        num[j]=temp;
    }
}